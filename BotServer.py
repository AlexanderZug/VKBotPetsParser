from vk_api.bot_longpoll import VkBotEventType
from vk_api.utils import get_random_id
from PetsFinder import PetsFinder
from PetsFinderDogs import PetsFinderDogs

URL_CATS = 'https://izpriuta.ru/koshki'
URL_DOGS = 'https://izpriuta.ru/sobaki'


class BotServer:

    def __init__(self, longpoll, vk, upload):
        self.__longpoll = longpoll
        self._vk = vk
        self.__char_table = dict(zip(map(ord, "qwertyuiop[]asdfghjkl;'zxcvbnm,./`"
                                              'QWERTYUIOP{}ASDFGHJKL:"ZXCVBNM<>?~'),
                                     "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é.—ë"
                                     '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ,–Å'))
        self.__par_cat = [i for i in PetsFinder(URL_CATS).get_content()]
        self.__par_dog = [i for i in PetsFinderDogs(URL_DOGS).get_content()]
        self.__upload = upload
        self.__var_cat_content_photo = []
        self.__var_dog_content_photo = []
        print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')

    def _in_process(self, list_commands):
        self.list_commands = list_commands
        self.__new_message()

    def __new_message(self):
        for event in self.__longpoll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW:
                msg = event.object.text.upper().translate(self.__char_table)
                try:
                    self.list_commands[msg]['function'](event.object.peer_id)
                except KeyError:
                    self.__rectification(event.object.peer_id)

    def command_help(self, user_id):
        bot_commands = [f'üêï {value} üêà {self.list_commands[value]["description"]}' for number_iteration, value in
                        enumerate(self.list_commands)]
        bot_commands = '\n\n'.join(bot_commands)
        self._vk.messages.send(
            peer_id=user_id,
            message=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É –í–∞–º –Ω–∞–π—Ç–∏ —Å–µ–±–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ –ø—Ä–∏—é—Ç–∞—Ö –ú–æ—Å–∫–≤—ã!\n\n{bot_commands}',
            random_id=get_random_id(),
        )

    def __rectification(self, user_id):
        bot_commands = [f'üêï {value} üêà {self.list_commands[value]["description"]}' for number_iteration, value in
                        enumerate(self.list_commands)]
        bot_commands = '\n\n'.join(bot_commands)
        self._vk.messages.send(
            peer_id=user_id,
            message=f'–Ø –Ω–µ —Å–æ–≤—Å–µ–º –í–∞—Å –ø–æ–Ω—è–ª... –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ —è —É–º–µ—é –∏ –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç: \n\n{bot_commands}',
            random_id=get_random_id(),
        )

    def __upload_photo(self, upload, photo):
        response = upload.photo_messages(photo)[0]
        owner_id = response['owner_id']
        photo_id = response['id']
        access_key = response['access_key']
        return owner_id, photo_id, access_key

    def __send_photo_content_cats(self, peer_id, owner_id, photo_id, access_key):
        attachment = f'photo{owner_id}_{photo_id}_{access_key}'
        self._vk.messages.send(
            random_id=get_random_id(),
            peer_id=peer_id,
            attachment=attachment,
            message=f'üìå–í–û–¢ –ö–¢–û –£ –ù–ê–° –ñ–ò–í–ï–¢ –ò –ò–©–ï–¢ –°–í–û–ô –î–û–úüìå'
                    f"\n\n{self.__var_cat_content_photo}",
        )

    def _main_photo_content_cats(self, user_id):
        content_img_counter = 0
        for i in PetsFinder(URL_CATS).file_write():
            self.__var_cat_content_photo = self.__par_cat[0 + content_img_counter]
            content_img_counter += 1
            self.__send_photo_content_cats(user_id, *self.__upload_photo(self.__upload, i))

    def __send_photo_content_dogs(self, peer_id, owner_id, photo_id, access_key):
        attachment = f'photo{owner_id}_{photo_id}_{access_key}'
        self._vk.messages.send(
            random_id=get_random_id(),
            peer_id=peer_id,
            attachment=attachment,
            message=f'üìå–í–û–¢ –ö–¢–û –£ –ù–ê–° –ñ–ò–í–ï–¢ –ò –ò–©–ï–¢ –°–í–û–ô –î–û–úüìå'
                    f"\n\n{self.__var_dog_content_photo}",
        )

    def _main_photo_content_dogs(self, user_id):
        content_img_counter_dog = 0
        for i in PetsFinderDogs(URL_DOGS).file_write():
            self.__var_dog_content_photo = self.__par_dog[0 + content_img_counter_dog]
            content_img_counter_dog += 1
            self.__send_photo_content_dogs(user_id, *self.__upload_photo(self.__upload, i))
