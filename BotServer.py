import time
from vk_api.bot_longpoll import VkBotEventType
from vk_api.utils import get_random_id
from PetsFinder import PetsFinder
from PetsFinderDogs import PetsFinderDogs
from pages import PetsPages

URL_CATS = 'https://izpriuta.ru/koshki'
URL_DOGS = 'https://izpriuta.ru/sobaki'


class BotServer:

    def __init__(self, longpoll, vk, upload):
        self.__longpoll = longpoll
        self._vk = vk
        self.__char_table = dict(zip(map(ord, "qwertyuiop[]asdfghjkl;'zxcvbnm,./`"
                                              'QWERTYUIOP{}ASDFGHJKL:"ZXCVBNM<>?~'),
                                     "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é.—ë"
                                     '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ,–Å'))
        self.__par_cat = [i for i in PetsFinder(URL_CATS).get_content()]
        self.__par_dog = [i for i in PetsFinderDogs(URL_DOGS).get_content()]
        self.__user_query = [i for i in PetsPages(URL_CATS).parse()]
        self.__cats_pages_content_disc = PetsPages(URL_CATS).all_cats_disc()
        self.__cats_img = PetsPages(URL_CATS).get_out_cats_img()
        self.__upload = upload
        self.__var_cat_content_photo = []
        self.__var_dog_content_photo = []
        self.__var_cat_photo_pages = []
        self.__iter_counter_cats = 0
        self.__img_counter_pages_cats = 0
        print(len(self.__cats_pages_content_disc))
        print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')

    def _in_process(self, list_commands):
        self.list_commands = list_commands
        self.__new_message()

    def __new_message(self):
        for event in self.__longpoll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW:
                msg = event.object.text.upper().translate(self.__char_table)
                for command in self.list_commands:
                    if command.replace(' --noshow', '') == msg:
                        self.list_commands[command]['function'](event.object.peer_id)
                        break
                else:
                    self.__rectification(event.object.peer_id)

    def command_help(self, user_id):
        bot_commands = [f'üêï {value} üêà {self.list_commands[value]["description"]}' for number_iteration, value in
                        enumerate(self.list_commands) if value.find(' --noshow') == -1]
        bot_commands = '\n\n'.join(bot_commands)
        self._vk.messages.send(
            peer_id=user_id,
            message=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É –í–∞–º –Ω–∞–π—Ç–∏ —Å–µ–±–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ –ø—Ä–∏—é—Ç–∞—Ö –ú–æ—Å–∫–≤—ã!\n\n{bot_commands}',
            random_id=get_random_id(),
        )

    def __rectification(self, user_id):
        bot_commands = [f'üêï {value} üêà {self.list_commands[value]["description"]}' for number_iteration, value in
                        enumerate(self.list_commands) if value.find(' --noshow') == -1]
        bot_commands = '\n\n'.join(bot_commands)
        self._vk.messages.send(
            peer_id=user_id,
            message=f'–Ø –Ω–µ —Å–æ–≤—Å–µ–º –í–∞—Å –ø–æ–Ω—è–ª... –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ —è —É–º–µ—é –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç: \n\n{bot_commands}',
            random_id=get_random_id(),
        )

    def __upload_photo(self, upload, photo):
        response = upload.photo_messages(photo)[0]
        owner_id = response['owner_id']
        photo_id = response['id']
        access_key = response['access_key']
        return owner_id, photo_id, access_key

    def __send_photo_content_cats(self, peer_id, owner_id, photo_id, access_key):
        attachment = f'photo{owner_id}_{photo_id}_{access_key}'
        self._vk.messages.send(
            random_id=get_random_id(),
            peer_id=peer_id,
            attachment=attachment,
            message=f'üìå–í–û–¢ –ö–¢–û –£ –ù–ê–° –ñ–ò–í–ï–¢ –ò –ò–©–ï–¢ –°–í–û–ô –î–û–úüìå'
                    f"\n\n{self.__var_cat_content_photo}",
        )

    def _main_photo_content_cats(self, user_id):
        content_img_counter = 0
        for i in PetsFinder(URL_CATS).file_write():
            self.__var_cat_content_photo = self.__par_cat[0 + content_img_counter]
            content_img_counter += 1
            time.sleep(0.2)
            self.__send_photo_content_cats(user_id, *self.__upload_photo(self.__upload, i))
            time.sleep(1)
        self.__user_query.append([user_id, 1, 1])

    def __send_photo_content_dogs(self, peer_id, owner_id, photo_id, access_key):
        attachment = f'photo{owner_id}_{photo_id}_{access_key}'
        self._vk.messages.send(
            random_id=get_random_id(),
            peer_id=peer_id,
            attachment=attachment,
            message=f'üìå–í–û–¢ –ö–¢–û –£ –ù–ê–° –ñ–ò–í–ï–¢ –ò –ò–©–ï–¢ –°–í–û–ô –î–û–úüìå'
                    f"\n\n{self.__var_dog_content_photo}",
        )

    def _main_photo_content_dogs(self, user_id):
        content_img_counter_dog = 0
        for i in PetsFinderDogs(URL_DOGS).file_write():
            self.__var_dog_content_photo = self.__par_dog[0 + content_img_counter_dog]
            content_img_counter_dog += 1
            time.sleep(0.2)
            self.__send_photo_content_dogs(user_id, *self.__upload_photo(self.__upload, i))
            time.sleep(1)

    def __not_more_pages(self, user_id):
        self._vk.messages.send(
            peer_id=user_id,
            message='üìå–£ –Ω–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–µ–≤, –Ω–æ –¥—É–º–∞—é, —á—Ç–æ –í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–∑ —Ç–µ—Ö, –∫–æ–≥–æ –í—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏üìå\n'
                    '–ï—Å–ª–∏ –í–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å - –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ ‚òé‚òé‚òé\n'
                    '–¢–µ–ª.: +7 915 307 09 99\n'
                    'e-mail: sobaka@izpriuta.ru',
            random_id=get_random_id(),
        )

    def __next_page_cats(self, peer_id, owner_id, photo_id, access_key):
        attachment = f'photo{owner_id}_{photo_id}_{access_key}'
        self._vk.messages.send(
            peer_id=peer_id,
            attachment=attachment,
            message=f"{self.__var_cat_photo_pages}",
            random_id=get_random_id(),
        )

    def __photo_from_pages_cats(self, user_id):
        for i in self.__cats_img[self.__iter_counter_cats:self.__iter_counter_cats+9]:
            self.__var_cat_photo_pages = self.__cats_pages_content_disc[0 + self.__img_counter_pages_cats]
            self.__img_counter_pages_cats += 1
            self.__iter_counter_cats += 1
            time.sleep(0.2)
            self.__next_page_cats(user_id, *self.__upload_photo(self.__upload, i))
            time.sleep(1)
        self.__more_pets_in_iter(user_id)

    def _more_pets_cats(self, user_id):
        for number, user in enumerate(self.__user_query):
            if user[0] == user_id and user[1] == 1:
                user[2] += 8
                if user[2] > len(self.__cats_img):
                    self.__not_more_pages(user_id)
                    del self.__user_query[number]
                else:
                    self.__photo_from_pages_cats(user_id)

    def __more_pets_in_iter(self, user_id):
        self._vk.messages.send(
            peer_id=user_id,
            message='\n\nüìå–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –±–æ–ª—å—à–µ –ø–∏—Ç–æ–º—Ü–µ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ üêï–ï–©–ïüêà –∏–ª–∏ –Ω–∞–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É üêï–ü–û–ú–û–©–¨üêà , '
                    '—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n',
            random_id=get_random_id(),
        )



